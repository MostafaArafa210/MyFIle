gameId=
promotionId=


n = t ? t.match(/#(?:access_token)=([\S\s]*?)&(?:id_token)=([\S\s]*?)&/) : null;
 i = function() {
                    var e, t = "".concat("https://id.twitch.tv/oauth2/authorize?client_id=").concat(null === (e = r.serverConfig) || void 0 === e ? void 0 : e.providers.twitch.clientId, "&response_type=token+id_token") + '&force_verify=true&claims={"id_token":{"email":null,"email_verified":null}}' + "&redirect_uri=".concat(window.location.origin, "/provider/twitch/redirect") + "&scope=".concat("user:read:email+openid", "&state=").concat(function(e) {
                        for (var t = "", n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789", r = 0; r < e; r += 1) t += n.charAt(Math.floor(Math.random() * n.length));
                        return t
                    }(15), "&display=popup");
                    return t
                },
                /me
  function A_() {
            var e = cn(),
                t = sn();
            return (0, qn.jsx)(qn.Fragment, {
                children: (0, qn.jsx)(Ar, {
                    exitBeforeEnter: !0,
                    children: (0, qn.jsxs)(rn, {
                        location: t,
                        children: [(0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/my-account"),
                            exact: !0,
                            component: Hv
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/my-account/games/:gameId"),
                            exact: !0,
                            component: xO
                        }), (0, qn.jsx)(rd, {
                            path: "".concat(e.path, "/my-account/games/:gameId/preregistration"),
                            authRoute: !0,
                            children: (0, qn.jsx)(P_, {})
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/personal-information"),
                            exact: !0,
                            component: dE
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/communication-preferences"),
                            exact: !0,
                            component: hE
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/change-password"),
                            exact: !0,
                            component: wE
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/mfa"),
                            exact: !0,
                            component: kE
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/epic/redirect"),
                            exact: !0,
                            component: SE
                        }), (0, qn.jsx)(Jt, {
                            path: "".concat(e.path, "/steam/redirect"),
                            exact: !0,
                            component: jE
                        }), (0, qn.jsx)(Wt, {
                            to: "".concat(e.path, "/my-account")
                        })]
                    }, t.pathname)
                })
            })
        }
        return e.prev = 0, e.next = 3, Dn("".concat(l.clientConfig.host, "/players/me/games/").concat(n, "/pre-registrations/").concat(r, "/surveys"), {
                                        response: t,
                                        isTosAccepted: i
                                        function jE() {
            var e = on();
            return (0, t.useEffect)((function() {
                window.opener || e.push("/account");
                var t = function() {
                    var e = window.location.hash.split("#")[1];
                    return new URLSearchParams(e).get("access_token")
                }();
                function SE() {
            var e = on();
            return (0, t.useEffect)((function() {
                window.opener || e.push("/account");
                var t = new URL(window.location.href).searchParams.get("code");
                t && window.opener.postMessage({
                    epicData: t
                }, "*"), window.close()
path: "my-account",
                    translation: "button.my-account"
                }, {
                    path: "personal-information",
                    translation: "account.settings.nav.details"
                }, {
                    path: "communication-preferences",
                    translation: "account.settings.nav.communication"
                }, {
                    path: "change-password",
                    translation: "account.settings.nav.password",
                    requires: e.user.requiresPassword
                }, {
                    path: "mfa",
                    translation: "account.settings.nav.mfa",
                    requires: e.user.requiresPassword
                return e && e.indexOf("###") > -1 ? e.replace(/###/g, ".") : e