callback=jsonpHandler
_hcms/preview/template
_hcms/mem/login
`${this.baseUrl}/content-tools-menu/api/v1/tools-menu/has-permission?portalId=${this.portalId}`
`${this.cpBaseUrl}/content-tools-menu/api/v1/tools-menu/permissions?portalId=${this.portalId}`
jsonp(`${this.baseUrl}/content-tools-menu/api/v1/content/validate-hubspot-user?redirect_url=${window.location.href}&portalId=${t}`, e => {
if (e && e.verified) {
	const t = this.getUrlParameter("redirect_url")
this.jsonp(`${this.baseUrl}/content-tools-menu/api/v1/tools-menu/${e}/${t}/actions?portalId=${n}`
`${this.baseUrl}/menus/${this.portalId}/edit/${n}`
`${this.cpBaseUrl}/content-tools-menu/api/v1/tools-menu/environment-cookie?portalId=${e}&environmentId=${n}&buffer=${t}`
/hs/cta/ctas/v2/public/cs/loader-v2.js?cos=1&" + this.utils.toQueryString(n) : i.loaderScriptUrl = "//" + this.utils.getServiceDomain(i.options.env, i.options.region) + "/ctas/v2/public/cs/loader-v2.js?" + this.utils.toQueryString(n);
		return i.loaderScriptUrl
/hs/cta/ctas/v2/public/cs/cta-loaded.js?" + this.utils.toQueryString(i) : "//" + this.utils.getServiceDomain(e.options.env, e.options.region) + "/ctas/v2/public/cs/cta-loaded.js?"
 "https://" + this.utils.getServiceDomain(i.options.env, i.options.region) + "/ctas/v2/public/cs/cta-json?
 https://perf" + ("na1" !== e ? "-" + e : "") + ".hsforms" + ("qa" === (this.env || "prod") ? "qa" : "") + ".com/embed/v3/counters.gif?key=" + t + "&value=1";
			(new Image).src = a
c = "" + hsVars.app_hs_base_url + "/content/" + l + "/settings/menus";
			d = jQuery(s).attr("data-sitemap-name");
			e.push(["Edit Navigation Menu", c + ("?site-map-name=" + d)])
/auth/auth0-status/${e}`
const o = (0, a.Z)("/auth/invitation/check"),
				n = (0, a.Z)("/authorization-bff/public/authorization/authorize", "get"),
				r = (0, a.Z)("/auth/checkResetToken"),
				l = (0, a.Z)("/auth/invitation/complete"),
				s = (0, a.Z)("/auth/forgotPassword"),
				m = (0, a.Z)("/auth/accounts", "get"),
				c = (0, a.Z)("/authorization-bff/authorization/grant-access", "post"),
				u = (0, a.Z)("/auth/invitation/merge"),
				d = (0, a.Z)("/auth/resetPassword"),
				g = (0, a.Z)("/auth/signinAs"),
				p = (0, a.Z)("/auth/invitation/updateEmail"),
				b = (0, a.Z)("/auth/logout"),
				root: "/",
				signIn: "/login",
				signAs: "/login-as",
				chooseAccount: "/login/account",
				forgotPassword: "/login/forgot-password",
				resetPassword: "/login/reset-password",
				resultResetPassword: "/login/result-reset-password",
				invitation: "/login/invitation",
				oauth: "/oauth",
				integrations: "/integrations",
				logout: "/logout",
				oAuthInitiator: "/integrations-oauth/:integrationId",
				oAuthConnector: "/integrations-oauth/:integrationId/connect",
				mergeAccountSignup: "/invitation/merge",
				mergeAccounts: "/merge-accounts",
				resultAccountUnblocked: "/login/result-unblock",
				unexpectedError: "/login/unexpected-error
function ie() {
				const [e, t] = (0, v.useState)(), n = (0, O.useHistory)(), {
					domain: a,
					clientId: r,
					redirectUri: i,
					audience: o
				} = (() => {
					const [e, t] = (0, v.useState)(), [n, a] = (0, v.useState)(!0);
					return (0, v.useEffect)((() => {
						const e = window.location.origin;
						switch (_.Z.ENVIRONMENT) {
							case "production":
								t({
									redirectUri: e,
									domain: "login.payfit.com",
									clientId: "6cniDP8MgkConfXsyoKpF80aYtpVFtSY",
									audience: "https://api.payfit.com"
								});
								break;
							case "working":
								t({
									redirectUri: e,
									domain: "login.payfit.tech",
									clientId: "x4xn7RlyPCJucOSM0Ztyl3f9HIoa8OcJ",
									audience: "https://api.payfit.tech"
								});
								break;
							case "development":
							case "dev":
								t({
									redirectUri: e,
									domain: "login.development.payfit.tech",
									clientId: "JXokXWQz14HO1zG7jZJS881F6Xv29Fia",
									audience: "https://api.dev.payfit.tech"
								});
								break;
							case "testing":
								t({
									redirectUri: e,
									domain: "login.testing.payfit.tech",
									clientId: "5HBQ2suYqgsFjFvNF0xYMb3BzTOc6UJz",
									audience: "https://api.testing.payfit.tech"
								});
								break;
							default:
								t({
									redirectUri: e,
									domain: "login.payfit.io",
									clientId: "DYcS1vgejuOYwSPaoQoAM4eRRovrUT8w",
									audience: "https://api.payfit.io"
								})
						}
						a(!1)
					}), [window.location.href]), Object.assign(Object.assign({}, e), {
						isLoading: n
					})
				})();
				return (0, v.useEffect)((() => {
					const n = (0, f.createLogger)({
						environment: _.Z.ENVIRONMENT,
						releaseId: _.Z.CIRCLE_SHA1,
						loggers: [Q({
							appEnvironment: _.Z.ENVIRONMENT,
							applicationId: "5942e9ee-ab1f-4a2e-996e-dcf39e6de4cd",
							clientToken: "pub5e78550c8053e0698c544fe0d5d309c2",
							sampleRate: 5,
							serviceName: "authweb"
						})]
					});
					/accessToken
					/auth/updateCurrentAccount", "post"
					/auth/auth0/continue-uri", "post")(u, void 0, {
						Authorization: `Bearer ${d.token}`
						path: (null == e ? void 0 : e.token) ? "auth/auth0/accounts" : "auth/accounts",
						method: "get"
						isCompanyAdminAccount
						b = function(e) {
					switch (e) {
						case "admin":
							return d.admin;
						case "employee":
							return d.employee;
						default:
							return null
							const C = (e = {}) => !(!(e && e.individualId && e.holdingId && e.userRole === u.admin) || e.employeeId),
				P = e => !(!(e && e.individualId && e.companyId && e.userRole === u.admin) || e.employeeId),
				h = e => C(e) || P(e),
				M = e => !(!(e && e.companyId && e.employeeId && e.userRole === u.employee) || e.holdingId),
				isCompanyAdminAccount
				isHoldingAdminAccount
e = function(e, t, n) {
		return jQuery.ajax(hsVars.app_hs_base_url + ("/content-tools-menu/api/v1/tools-menu/" + e + "/" + t + "/actions?portalId=" + n), {
			dataType: "jsonp",
			success: function(e) {
				return e.actions ? a(e.actions) : void 0
			}
		})
	};
	redirect_uri
const [t, n] = await Promise.all(["f4b43d627778dce1e888b68b480615d5", "e6e296368cfdeb52fa070a6a57dd82e2"].map((t => fetch(`https://translations.payfit.com/${t}/default/${e}.json`).then((e => e.json())))));
				return Object.assign(Object.assign({}, n), t)
			}

				v = e => (0, a.Z)(`/authorization-bff/authorization/applications/${e.applicationId}`, "get")()
return se(e, ["linkRedirect", "redirectTo", "redirect"])
				},
				me = () => ((0, v.useEffect)((() => {
					window.location.href = "/login?unexpected=true
/auth/auth0-status/${e}
var i = n(56640);
			const a = (0, i.Z)("/auth/invitation/check"),
				r = (e, t) => (0, i.Z)("/authorization-bff/public/authorization/authorize", "get")(void 0, e, t ? {
					Authorization: `Bearer ${t}`
				} : void 0),
				o = (0, i.Z)("/auth/checkResetToken"),
				l = (0, i.Z)("/auth/invitation/complete"),
				s = (0, i.Z)("/auth/forgotPassword"),
				c = e => (0, i.Z)("/auth/accounts", "get")(void 0, void 0, e ? {
					Authorization: `Bearer ${e}`
				} : void 0),
				u = (e, t) => (0, i.Z)("/authorization-bff/authorization/grant-access", "post")(e, void 0, t ? {
					Authorization: `Bearer ${t}`
				} : void 0);
			var m = n(48569);
			const d = (0, i.Z)("/auth/resetPassword"),
				g = (0, i.Z)("/auth/signinAs"),
				p = (0, i.Z)("/auth/invitation/updateEmail"),
				h = ((0, i.Z)("/auth/logout"), (e, t) => (0, i.Z)(`/authorization-bff/authorization/applications/${e.applicationId}`, "get")(void 0, void 0, t ? {
					Authorization: `Bearer ${t}`
				} : void 0))
		},
		48569: (e, t, n) => {
			n.d(t, {
				A: () => i
			});
			const i = (0, n(56640).Z)("/auth/invitation/merge")
const r = ["SUMMER.FRUIT", "TELECHARGEMENT", "Q1W2E3R4T5Y6", "L58JKDJP!M", "QDUJVYG5SXA", "KA_DJKHJSY6", "SOJDLG123ALJG", "B9399F21060D4B5FCB6D3CF5FEA8DE", "1Q2W3E4R5T6Y", "AZERTY123456", "DOOMSAYER.2.7MORDS.VV", "ENSICPTFCORP", "L58JKDJP!M", "AZERTYUIOP123", "JUNDIAN2011XR", "1QAZ2WSX3EDC", "QWERTY123456", "PLAYSTATION3", "1B3C6981ABB574003277B6BF9751F9C2", "SUPERMANBOY", "123QWEASDZXC", "MARSEILLE13", "E10ADC3949BA59ABBE56E057F20F883E", "COMMUNICATION", "VATEFAIREFOUTRE", "DENIS.GOBBI", "E10ADC3949BA59A", "JAMESBOND007", "JFGVCQBUZUG", "AZERTY123456789", "0R968JI9UFJ6", "A20476652ABE334C006A6497524CF16F", "ABUSE_123456_ABUSE", "AZERTYUIOP789", "123456AZERTY", "RONALDINHO10", "AIDESOIGNANTE", "YOUJIZZ.COM", "123456789ABC", "123456QWERTY", "F.BRIGHENTI1", "ABUSE_102030_ABUSE", "AZERTYUIOP^$", "1Q2W3E4R5T6Y7U", "CDOSABANDONWARE", "TARIK010991158", "MICHAELJACKSON", "PASSWORD123", "11E749FAFCF69A80EE8AE9EF9AEF022E", "ROYALCASH.FR", "PLAYSTATION2", "SENISEVIYORUM", "JETAIMEMONAMOUR", "JEAN-CLAUDE", "AUBERVILLIERS", "MONMOTDEPASSE", "0675281493SEX", "TEQUILA.GAZDIK", "LINKEDIN2011", "COUNTERSTRIKE", "MONTPELLIER34", "123456789AZERTY", "STRASBOURG67", "88183B946CC5F0E8C96B2E66E1C74A7E", "QWEASDZXC123", "JEAN-PIERRE", "HOLIDAYSECURE123$", "SOSOJONE55CHEAT", "PROFESSIONNEL", "AZERTYUIOP12", "HOLIDAYSECURE123", "0123654789CH", "JETAIMEMONCOEUR", "123456+MO+", "CONSTANTINE25", "123QWEASDZXC", "1QAZ2WSX3EDC", "Q1W2E3R4T5Y6", "1Q2W3E4R5T6Y", "FUCK_INSIDE", "MAILCREATED5240", "123456QWERTY", "QWERTY123456", "POLNIYPIZDEC0211", "SOJDLG123ALJG", "QAZWSXEDC123", "ZXCASDQWE123", "123456789QWE", "1QAZXSW23EDC", "QWEASDZXC123", "FLVBYBCNHFNJH", "GHBDTNRFRLTKF", "CHICKENWING101", "1QAZ2WSX3EDC4RFV", "NEWPROJECT2004", "MASTERBAITING", "MAUROLARASTEFY", "DOMAINLOCK2005", "MOMSANALADVENTURE", "HD764NW5D7E1VB1", "QAZWSXEDCRFVTGB", "COUNTERSTRIKE", "ZAQ1XSW2CDE3", "123456789ABC", "ADMIN18533362", "23176DJIVANFROS", "123456789QWERTY", "FKTRCFYLHJDBX", "123456789QAZ", "12345678900987654321", "PASSWORD1234", "LOST4815162342", "COMBAT123654", "QWERTY123456789", "DEVILMAYCRY4", "89231243658S", "JAMESBOND007", "4815162342LOST", "123123QWEQWE", "1234567890QW", "1234QWERASDF", "123QWE456RTY", "ASDFGHJKL123", "QWERTYUIOP123", "SAUN24865709", "Q1W2E3R4T5Y6U7", "1QA2WS3ED4RF", "123456789ZXC", "POLNIYPIZDEC110211", "PLAYSTATION3", "Q1W2E3R4T5Y6U7I8", "ZQJPHSYF6CTIFGU", "1234567890QWE", "LHBJKJUBZ2957704", "12QW34ER56TY", "1QAZXSW23EDCVFR4", "CHRISTOPHER1", "MINECRAFT123", "BOY4U2OWNNYC", "AN83546921AN13", "1234567890ZZZ", "OLCRACKMASTER", "ABC123456789", "AUCKLAND2010", "123321QWEEWQ", "32615948WORMS", "NEMVXYHEQDD5OQXYXYZI", "41D8CD98F00B", "NHFDVFNJKJU123", "P030710P$E4O", "PLAYSTATION2", "1234567890QAZ", "1A2S3D4F5G6H", "89876065093RAX", "1234567QWERTYU", "1234QWERASDFZXCV", "LYTGHJGTNHJDCR", "NHECSYFUJKJDT", "Q1W2E3R4T5Y6U7I8O9P0", "PASSWORDSTANDARD", "MAPRCHEM56458", "WARHAMMER40K", "1234567890QWERTY", "MORGANSTANLEY", "1234567890987654321", "QWERTYUIOP10", "QAZXSWEDC123", "ZXCVBN123456", "59382113KEVINP", "BPGJLDSGJLDTHNF", "RFNTHBYF1988", "1QA2WS3ED4RF5TG", "QWERTYUIOP12345", "ASDFGH123456", "123456789ASD", "MICHAELJACKSON", "ILOVEMYFAMILY", "WEIHNACHTSBAU", "QAZ123WSX456", "123456789QWER", "SYSTEMOFADOWN", "AMADEUSPTFCOR", "ZXCVBNM123456789", "WEBSOLUTIONSSU", "PARAKLAST1974", "MINNESOTA_HP", "123QWERTY123", "A1S2D3F4G5H6", "Z1X2C3V4B5N6M7", "GHJNBDJCNJZYBT", "QWERTYUIOP12", "QWERTASDFGZXCVB", "WEIHNACHTSBAUM"];